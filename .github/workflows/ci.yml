name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - compiler: gcc-11
            cxx: g++-11
          - compiler: clang-14
            cxx: clang++-14
        build_type: [Release]
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libeigen3-dev libssl-dev pkg-config

      - name: Install Apache Arrow C++
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates lsb-release wget
          wget https://packages.apache.org/artifactory/arrow/$(lsb_release -sc)/apache-arrow-apt-source-latest-$(lsb_release -sc).deb
          sudo apt install -y ./apache-arrow-apt-source-latest-$(lsb_release -sc).deb
          sudo apt-get update
          sudo apt-get install -y libarrow-dev libarrow-dataset-dev libparquet-dev

      - name: Configure CMake
        env:
          CC: ${{ matrix.compiler }}
          CXX: ${{ matrix.cxx }}
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
            -DPSYNE_BUILD_TESTS=ON

      - name: Build
        run: cmake --build build -- -j$(nproc)

      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure -j$(nproc)

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          brew install cmake eigen openssl pkg-config apache-arrow

      - name: Configure CMake
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_PREFIX_PATH="$(brew --prefix apache-arrow)" \
            -DCMAKE_BUILD_TYPE=Release \
            -DPSYNE_BUILD_TESTS=ON

      - name: Build
        run: cmake --build build -- -j$(sysctl -n hw.ncpu)

      - name: Run Tests
        run: |
          cd build
          ctest --output-on-failure -j$(sysctl -n hw.ncpu)

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        include:
          - build_type: Release
            arch: x64
          - build_type: Debug
            arch: x64
    steps:
      - uses: actions/checkout@v4
      - uses: microsoft/setup-msbuild@v2

      - name: Bootstrap vcpkg
        uses: lukka/get-vcpkg@v15
        id: vcpkg

      - name: Install dependencies via vcpkg
        run: |
          "${{ steps.vcpkg.outputs.vcpkg-root }}\vcpkg.exe" install \
            eigen3:x64-windows \
            openssl:x64-windows \
            arrow:x64-windows \
            parquet:x64-windows
          "${{ steps.vcpkg.outputs.vcpkg-root }}\vcpkg.exe" integrate install

      - name: Configure CMake
        run: |
          mkdir build && cd build
          cmake .. `
            -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} `
            -DPSYNE_BUILD_TESTS=ON `
            -DCMAKE_TOOLCHAIN_FILE="${{ steps.vcpkg.outputs.vcpkg-root }}\scripts\buildsystems\vcpkg.cmake" `
            -DVCPKG_TARGET_TRIPLET=x64-windows `
            -A ${{ matrix.arch }}

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }} -- /m

      - name: Run Tests
        run: |
          cd build
          ctest -C ${{ matrix.build_type }} --output-on-failure

  validate-examples:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential cmake libeigen3-dev libssl-dev

      - name: Install Apache Arrow C++
        run: |
          sudo apt-get update
          sudo apt-get install -y ca-certificates lsb-release wget
          wget https://packages.apache.org/artifactory/arrow/$(lsb_release -sc)/apache-arrow-apt-source-latest-$(lsb_release -sc).deb
          sudo apt install -y ./apache-arrow-apt-source-latest-$(lsb_release -sc).deb
          sudo apt-get update
          sudo apt-get install -y libarrow-dev libarrow-dataset-dev libparquet-dev

      - name: Build Examples
        run: |
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_BUILD_TYPE=Release \
            -DPSYNE_BUILD_EXAMPLES=ON
          cmake --build . --target psyne -j$(nproc)